[sympy__sympy__1.1] [sympy__sympy-13437] Task Metadata:
	- Instance ID: sympy__sympy-13437
	- Testbed: sympy__sympy__1.1
	- Evaluation Model: SWE-bench_Lite_golden
	- Python version: Python 3.7.17
 
[sympy__sympy__1.1] [sympy__sympy-13437] Command: git -c advice.detachedHead=false checkout 674afc619d7f5c519b6a5393a8b0532a131e57e0 
[sympy__sympy__1.1] [sympy__sympy-13437] Subprocess args: {"cwd": "/opt/sympy__sympy", "check": true, "shell": false, "universal_newlines": true, "stdout": -1, "stderr": -2} 
[sympy__sympy__1.1] [sympy__sympy-13437] Std. Output:
Previous HEAD position was ec9e3c0436 Merge pull request #14817 from jashan498/print_mat_fix
HEAD is now at 674afc619d Merge pull request #13415 from smichr/solvesym
 
[sympy__sympy__1.1] [sympy__sympy-13437] Return Code: 0 
[sympy__sympy__1.1] [sympy__sympy-13437] Command: git apply -v /opt/temp_sympy__sympy-13437_pred_try.patch 
[sympy__sympy__1.1] [sympy__sympy-13437] Subprocess args: {"cwd": "/opt/sympy__sympy", "check": false, "shell": false, "universal_newlines": true, "stdout": -1, "stderr": -2} 
[sympy__sympy__1.1] [sympy__sympy-13437] Std. Output:
Checking patch sympy/functions/combinatorial/numbers.py...
Hunk #1 succeeded at 434 (offset 10 lines).
Applied patch sympy/functions/combinatorial/numbers.py cleanly.
 
[sympy__sympy__1.1] [sympy__sympy-13437] Return Code: 0 
[sympy__sympy__1.1] [sympy__sympy-13437] Apply patch successful (pred_try) 
>>>>> Applied Patch (pred_try)
[sympy__sympy__1.1] [sympy__sympy-13437] Command: git apply -v -R /opt/temp_sympy__sympy-13437_pred_try.patch 
[sympy__sympy__1.1] [sympy__sympy-13437] Subprocess args: {"cwd": "/opt/sympy__sympy", "check": false, "shell": false, "universal_newlines": true, "stdout": -1, "stderr": -2} 
[sympy__sympy__1.1] [sympy__sympy-13437] Std. Output:
Checking patch sympy/functions/combinatorial/numbers.py...
Hunk #1 succeeded at 434 (offset -10 lines).
Applied patch sympy/functions/combinatorial/numbers.py cleanly.
 
[sympy__sympy__1.1] [sympy__sympy-13437] Return Code: 0 
[sympy__sympy__1.1] [sympy__sympy-13437] Revert patch successful (pred_try) 
>>>>> Applied Patch (pred_try)
[sympy__sympy__1.1] [sympy__sympy-13437] Command: git apply -v /opt/temp_sympy__sympy-13437_pred.patch 
[sympy__sympy__1.1] [sympy__sympy-13437] Subprocess args: {"cwd": "/opt/sympy__sympy", "check": false, "shell": false, "universal_newlines": true, "stdout": -1, "stderr": -2} 
[sympy__sympy__1.1] [sympy__sympy-13437] Std. Output:
Checking patch sympy/functions/combinatorial/numbers.py...
Hunk #1 succeeded at 434 (offset 10 lines).
Applied patch sympy/functions/combinatorial/numbers.py cleanly.
 
[sympy__sympy__1.1] [sympy__sympy-13437] Return Code: 0 
[sympy__sympy__1.1] [sympy__sympy-13437] Apply patch successful (pred) 
>>>>> Applied Patch (pred)
[sympy__sympy__1.1] [sympy__sympy-13437] Command: git restore sympy/functions/combinatorial/tests/test_comb_numbers.py 
[sympy__sympy__1.1] [sympy__sympy-13437] Subprocess args: {"cwd": "/opt/sympy__sympy", "check": true, "shell": false, "universal_newlines": true, "stdout": -1, "stderr": -2} 
[sympy__sympy__1.1] [sympy__sympy-13437] Std. Output:
 
[sympy__sympy__1.1] [sympy__sympy-13437] Return Code: 0 
[sympy__sympy__1.1] [sympy__sympy-13437] Command: git apply -v /opt/temp_sympy__sympy-13437_test.patch 
[sympy__sympy__1.1] [sympy__sympy-13437] Subprocess args: {"cwd": "/opt/sympy__sympy", "check": false, "shell": false, "universal_newlines": true, "stdout": -1, "stderr": -2} 
[sympy__sympy__1.1] [sympy__sympy-13437] Std. Output:
Checking patch sympy/functions/combinatorial/tests/test_comb_numbers.py...
Hunk #1 succeeded at 84 (offset 11 lines).
Hunk #2 succeeded at 115 (offset 11 lines).
Applied patch sympy/functions/combinatorial/tests/test_comb_numbers.py cleanly.
 
[sympy__sympy__1.1] [sympy__sympy-13437] Return Code: 0 
[sympy__sympy__1.1] [sympy__sympy-13437] Apply patch successful (test) 
>>>>> Applied Patch (test)
Test Script:  bin/test -C --verbose sympy/functions/combinatorial/tests/test_comb_numbers.py;
[sympy__sympy__1.1] [sympy__sympy-13437] Command: bin/test -C --verbose sympy/functions/combinatorial/tests/test_comb_numbers.py 
[sympy__sympy__1.1] [sympy__sympy-13437] Subprocess args: {"cwd": "/opt/sympy__sympy", "check": false, "shell": false, "universal_newlines": true, "stdout": -1, "stderr": -2, "timeout": 1800} 
[sympy__sympy__1.1] [sympy__sympy-13437] Std. Output:
============================= test process starts ==============================
executable:         /opt/pyenv/versions/3.7.17/bin/python  (3.7.17-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        47827387
hash randomization: on (PYTHONHASHSEED=4285233842)

sympy/functions/combinatorial/tests/test_comb_numbers.py[20] 
test_bernoulli ok
test_fibonacci ok
test_bell ok
test_harmonic ok
test_harmonic_rational ok
test_harmonic_evalf ok
test_harmonic_rewrite_polygamma ok
test_harmonic_limit_fail f
test_harmonic_rewrite_sum_fail f
test_harmonic_rewrite_sum ok
test_euler ok
test_euler_failing f
test_euler_odd ok
test_euler_polynomials ok
test_euler_polynomial_rewrite ok
test_catalan ok
test_genocchi ok
test_nC_nP_nT ok
test_issue_8496 ok
test_issue_8601 ok                                                          [OK]


________________________________ slowest tests _________________________________
test_bell - Took 557.545 seconds
======= tests finished: 17 passed, 3 expected to fail, in 575.49 seconds =======
/opt/sympy__sympy/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  from collections import Mapping, defaultdict
/opt/sympy__sympy/sympy/core/containers.py:271: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  class OrderedSet(collections.MutableSet):
/opt/sympy__sympy/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  from collections import Callable
/opt/sympy__sympy/sympy/core/basic.py:3: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  from collections import Mapping, defaultdict
/opt/sympy__sympy/sympy/core/containers.py:271: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  class OrderedSet(collections.MutableSet):
/opt/sympy__sympy/sympy/plotting/plot.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
  from collections import Callable
 
[sympy__sympy__1.1] [sympy__sympy-13437] Return Code: 0 

>>>>> All Tests Passed
[sympy__sympy__1.1] [sympy__sympy-13437] Test script run successful 
